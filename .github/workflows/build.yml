name: Build ESP32 Firmware

on:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with ESP-IDF
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.1.1
        target: esp32
        path: ./

    - name: Extract version from main.c
      id: version
      run: |
        VERSION=$(grep -oP 'FIRMWARE_VERSION "\K[^"]*' main/main.c || echo "1.0.0")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected version: $VERSION"

    - name: Prepare firmware package
      run: |
        # Create output directory
        mkdir -p firmware-output
        
        # Copy ALL binary files
        cp build/bootloader/bootloader.bin firmware-output/
        cp build/partition_table/partition-table.bin firmware-output/
        cp build/*.bin firmware-output/
        
        # Generate version info
        echo '{
          "version": "${{ steps.version.outputs.version }}",
          "build_date": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "url": "https://github.com/${{ github.repository }}/releases/latest/download/firmware.bin"
        }' > firmware-output/version.json
        
        echo "=== Final files ==="
        ls -la firmware-output/

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          firmware-output/*.bin
          firmware-output/version.json
        body: |
          Auto-generated ESP32 Firmware
          
          **Version:** ${{ steps.version.outputs.version }}
          
          Devices will auto-update when this release is published.

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-build
        path: |
          firmware-output/*.bin
          firmware-output/version.json
        retention-days: 30
