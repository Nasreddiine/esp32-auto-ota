name: Build and Release ESP32 Firmware

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with ESP-IDF
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.1.1
        target: esp32
        path: ./

    - name: Extract version from root CMakeLists.txt
      id: version
      run: |
        VERSION=$(grep -oP 'set\(PROJECT_VER "\K[^"]*' CMakeLists.txt || echo "1.0.0")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected version: $VERSION"

    - name: Prepare firmware files
      run: |
        mkdir -p firmware-release
        
        # Copy binary files
        cp build/bootloader/bootloader.bin firmware-release/
        cp build/partition_table/partition-table.bin firmware-release/
        
        # Find and copy the main application binary
        if [ -f "build/esp32-auto-ota.bin" ]; then
          cp build/esp32-auto-ota.bin firmware-release/firmware.bin
        elif [ -f "build/esp32_auto_ota.bin" ]; then
          cp build/esp32_auto_ota.bin firmware-release/firmware.bin
        else
          # Use the most common pattern
          cp build/*.bin firmware-release/firmware.bin 2>/dev/null || true
        fi
        
        # Verify firmware file exists
        if [ ! -f "firmware-release/firmware.bin" ]; then
          echo "Looking for firmware file..."
          find build/ -name "*.bin" -type f
          echo "ERROR: No firmware.bin file found!"
          exit 1
        fi
        
        echo "=== Files ready for release ==="
        ls -la firmware-release/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          # ESP32 Auto-OTA Firmware
          
          **Version:** ${{ steps.version.outputs.version }}
          **Build Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          ## Files
          - `firmware.bin` - Main application
          - `bootloader.bin` - Bootloader  
          - `partition-table.bin` - Partition table
        files: firmware-release/*
        draft: false
        prerelease: false
