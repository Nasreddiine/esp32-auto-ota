name: Build ESP32 Firmware

on:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with ESP-IDF
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.1.1
        target: esp32
        path: ./

    - name: Prepare firmware package
      run: |
        # Create output directory
        mkdir -p firmware-output
        
        # Copy ALL binary files recursively
        find build/ -name "*.bin" -exec cp {} firmware-output/ \;
        
        # Rename the main application file to firmware.bin
        # Look for the largest .bin file (usually the main firmware)
        LARGEST_FILE=$(find firmware-output/ -name "*.bin" -exec du -b {} \; | sort -nr | head -1 | cut -f2)
        if [ -n "$LARGEST_FILE" ] && [ "$LARGEST_FILE" != "firmware-output/bootloader.bin" ] && [ "$LARGEST_FILE" != "firmware-output/partition-table.bin" ]; then
          mv "$LARGEST_FILE" firmware-output/firmware.bin
        fi
        
        # Generate version info
        echo '{
          "version": "${{ github.sha }}",
          "build_date": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "url": "https://github.com/${{ github.repository }}/releases/latest/download/firmware.bin"
        }' > firmware-output/version.json
        
        echo "=== Final files ==="
        ls -la firmware-output/

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-build
        path: |
          firmware-output/*.bin
          firmware-output/version.json
        retention-days: 30
